<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ARE YOU ALREADY A MEMBER? LOG IN NOW" xml:space="preserve">
    <value>ARE YOU ALREADY A MEMBER? LOG IN NOW</value>
  </data>
  <data name="BABY" xml:space="preserve">
    <value>BABY</value>
  </data>
  <data name="Click&amp;amp;Collect From Store" xml:space="preserve">
    <value>Click&amp;amp;Collect From Store</value>
  </data>
  <data name="Continue as guest" xml:space="preserve">
    <value>Continue as guest</value>
  </data>
  <data name="Continue as guest-" xml:space="preserve">
    <value>Continue as guest</value>
  </data>
  <data name="Date of Birth" xml:space="preserve">
    <value>Date of Birth</value>
  </data>
  <data name="DEFIT" xml:space="preserve">
    <value>DEFIT</value>
  </data>
  <data name="E-mail Address" xml:space="preserve">
    <value>E-mail Address</value>
  </data>
  <data name="E-mail_Address" xml:space="preserve">
    <value>E-mail Address</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Favorite" xml:space="preserve">
    <value>Favorite</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="First Name" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="Forgot Password" xml:space="preserve">
    <value>Forgot Password</value>
  </data>
  <data name="FreeShipping" xml:space="preserve">
    <value>Free shipping, 30-day return or refund guarantee.</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="I do not want to specify" xml:space="preserve">
    <value>I do not want to specify</value>
  </data>
  <data name="I have read and understand the Website Terms Use and the Privacy Policy by clicking of the 'Register' button." xml:space="preserve">
    <value>I have read and understand the Website Terms Use and the Privacy Policy by clicking of the 'Register' button.</value>
  </data>
  <data name="I would like to sign up for the Defacto newsletter, receive Defacto survey inquiries and accept to receive E-Mails /SMS /calls for marketing purposes. I can unsubscribe from the newsletter and survey inquiries at any time for the future, e.g. by clicking on the unsubscribe link or sending an e-mail to dataprotection@defacto.com." xml:space="preserve">
    <value>I would like to sign up for the Defacto newsletter, receive Defacto survey inquiries and accept to receive E-Mails /SMS /calls for marketing purposes. I can unsubscribe from the newsletter and survey inquiries at any time for the future, e.g. by clicking on the unsubscribe link or sending an e-mail to dataprotection@defacto.com.</value>
  </data>
  <data name="KIDS" xml:space="preserve">
    <value>KIDS</value>
  </data>
  <data name="Last Name" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="LOG IN WITH SOCIAL ACCOUNT" xml:space="preserve">
    <value>LOG IN WITH SOCIAL ACCOUNT</value>
  </data>
  <data name="LOG IN WITH SOCIAL_ACCOUNT" xml:space="preserve">
    <value>LOG IN WITH SOCIAL ACCOUNT</value>
  </data>
  <data name="LOGIN!" xml:space="preserve">
    <value>LOGIN</value>
  </data>
  <data name="LoginDe" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log Out</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="MAN" xml:space="preserve">
    <value>MAN</value>
  </data>
  <data name="NOT A MEMBER? JOIN NOW" xml:space="preserve">
    <value>NOT A MEMBER? JOIN NOW</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Password_" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Phone Number" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Register#" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Remember Me" xml:space="preserve">
    <value>Remember Me</value>
  </data>
  <data name="Search: Jean Pants, Basic Body, Modern Fit Shirt, Track Suit" xml:space="preserve">
    <value>Search Jean Pants, Basic Body, Modern Fit Shirt, Track Suit</value>
  </data>
  <data name="SearchtxtNav" xml:space="preserve">
    <value>Search Jean Pants, Basic Body, Modern Fit Shirt, Track Suit</value>
  </data>
  <data name="ShoppingCart" xml:space="preserve">
    <value>Shopping Cart</value>
  </data>
  <data name="SIGN IN" xml:space="preserve">
    <value>SIGN IN</value>
  </data>
  <data name="Sign In!!" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="SUBSCRIBE WITH YOUR EMAIL ADDRESS" xml:space="preserve">
    <value>SUBSCRIBE WITH YOUR EMAIL ADDRESS</value>
  </data>
  <data name="WOMAN" xml:space="preserve">
    <value>WOMAN</value>
  </data>
  <data name="Your personal data; It will be processed by the data controller Defacto company. You can find detailed information from  Member Clarification Text By clicking the “Sign Up” button you are deemed to have consented to the DeFacto Gift Club Membership Agreement and the processing and transfer of your personal data abroad within the scope of the  Explicit Consent Text" xml:space="preserve">
    <value>Your personal data; It will be processed by the data controller Defacto company. You can find detailed information from  Member Clarification Text By clicking the “Sign Up” button you are deemed to have consented to the DeFacto Gift Club Membership Agreement and the processing and transfer of your personal data abroad within the scope of the  Explicit Consent Text</value>
  </data>
</root>